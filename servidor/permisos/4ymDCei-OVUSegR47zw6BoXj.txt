CREATE OR REPLACE FUNCTION public.insertar_registros_temperatura(
	_codigo_empleado character varying,
	_codigo_reloj character varying,
	_fecha_hora_timbre timestamp without time zone,
	_accion character varying,
	_tecla_funcion character varying,
	_latitud character varying,
	_longitud character varying,
	_temperatura character varying)
    RETURNS integer
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
declare
	vr_registros record;
begin	
	select 1 existe into vr_registros from timbre 
	where fecha_hora_timbre=_fecha_hora_timbre and codigo_empleado=_codigo_empleado;
	if not found then
		insert into timbre (timb_id,codigo_empleado,codigo_reloj,fecha_hora_timbre,accion,tecla_funcion, temperatura, latitud, longitud) 
		values((select contador from contadores where tabla='timbre'),_codigo_empleado,_codigo_reloj,_fecha_hora_timbre,_accion,_tecla_funcion, _temperatura, _latitud, _longitud);
		update contadores set contador = (contador + 1) where tabla = 'timbre';
		return 1;
	else
		return 0;
	end if;
end;
$BODY$;

ALTER FUNCTION public.insertar_registros_temperatura(character varying, character varying, timestamp without time zone, character varying, character varying, character varying, character varying, character varying)
    OWNER TO postgres;


ALTER TABLE timbre ALTER COLUMN codigo_reloj SET DATA TYPE character varying(20);
alter table timbre add column temperatura character varying(50);